import { CopyOutlined } from '@ant-design/icons';
import { Button, Input, Modal } from 'antd';
import { useCallback, useEffect, useId, useMemo, useState } from 'react';
import Tabs, { type TabItem } from './ui/Tabs';

interface SupportProjectModalProps {
  open: boolean;
  onClose: () => void;
}

type SupportTab = 'bybit' | 'crypto' | 'coffee';

const WALLET_ADDRESS = '0xDAa8A9B232A06616a0b0F9E91D6913A0b7555643';
const DEBANK_URL = `https://debank.com/profile/${WALLET_ADDRESS}`;
const BUY_ME_A_COFFEE_URL = 'https://www.buymeacoffee.com/dedon';
const BYBIT_UID = '496946534';

const SupportProjectModal = ({ open, onClose }: SupportProjectModalProps) => {
  const [activeTab, setActiveTab] = useState<SupportTab>('bybit');
  const [copyStatus, setCopyStatus] = useState<'idle' | 'copied' | 'error'>('idle');
  const addressInputId = useId();

  useEffect(() => {
    if (open) {
      setActiveTab('bybit');
      setCopyStatus('idle');
    }
  }, [open]);

  const handleCopyAddress = useCallback(async () => {
    if (!navigator?.clipboard?.writeText) {
      setCopyStatus('error');
      return;
    }

    try {
      await navigator.clipboard.writeText(WALLET_ADDRESS);
      setCopyStatus('copied');
    } catch (_error) {
      setCopyStatus('error');
    }
  }, []);

  const tabItems: TabItem[] = useMemo<TabItem[]>(
    () => [
      {
        id: 'bybit',
        label: 'ByBit –ø–µ—Ä–µ–≤–æ–¥',
        content: (
          <div className="support-modal__tab">
            <p>
              –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ª—é–±—É—é —Å—É–º–º—É –Ω–∞ ByBit –ø–æ UID <strong>{BYBIT_UID}</strong>. –£–∫–∞–∂–∏ –µ–≥–æ –∫–∞–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤
              –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏–ª–∏ –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –±–∏—Ä–∂–∏.
            </p>
          </div>
        ),
      },
      {
        id: 'crypto',
        label: '–ö—Ä–∏–ø—Ç–∞',
        content: (
          <div className="support-modal__tab">
            <p>
              –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±—É—é —Å—É–º–º—É –≤ –ª—é–±–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ (USDT, USDC, ETH, WBTC, DAI, –∏ —Ç.–¥.) –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ
              Ethereum (ERC-20) ‚Äî –≤ –ª—é–±–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–π —Å–µ—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Ethereum Mainnet, Arbitrum, Base –∏ –¥—Ä.).
            </p>
            <div className="support-modal__address-block">
              <label className="support-modal__address-label" htmlFor={addressInputId}>
                –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞
              </label>
              <div className="support-modal__address-row">
                <Input
                  id={addressInputId}
                  className="support-modal__address-input"
                  value={WALLET_ADDRESS}
                  readOnly
                  aria-readonly="true"
                />
                <Button icon={<CopyOutlined />} onClick={handleCopyAddress} className="support-modal__copy-button">
                  –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                </Button>
              </div>
              {copyStatus === 'copied' && (
                <span className="support-modal__copy-status support-modal__copy-status--success">–ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω</span>
              )}
              {copyStatus === 'error' && (
                <span className="support-modal__copy-status support-modal__copy-status--error">
                  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å ‚Äî –≤—ã–¥–µ–ª–∏ –∞–¥—Ä–µ—Å –≤—Ä—É—á–Ω—É—é
                </span>
              )}
            </div>
            <a className="support-modal__link" href={DEBANK_URL} target="_blank" rel="noreferrer noopener">
              –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤ DeBank
            </a>
          </div>
        ),
      },
      {
        id: 'coffee',
        label: 'Buy Me a Coffee',
        content: (
          <div className="support-modal__tab">
            <p>
              –ï—Å–ª–∏ —É–¥–æ–±–Ω–µ–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è Buy Me a Coffee, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ª—é–±–æ–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
              –∫–æ–º–∞–Ω–¥–µ. –≠—Ç–æ –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± —Å–∫–∞–∑–∞—Ç—å —Å–ø–∞—Å–∏–±–æ.
            </p>
            <a className="support-modal__link" href={BUY_ME_A_COFFEE_URL} target="_blank" rel="noreferrer noopener">
              –û—Ç–∫—Ä—ã—Ç—å Buy Me a Coffee
            </a>
          </div>
        ),
      },
    ],
    [addressInputId, copyStatus, handleCopyAddress],
  );

  const handleTabChange = (nextTabId: string) => {
    if (nextTabId === 'bybit' || nextTabId === 'crypto' || nextTabId === 'coffee') {
      setActiveTab(nextTabId);
    }
  };

  return (
    <Modal open={open} onCancel={onClose} footer={null} title="üíñ –ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç" centered destroyOnClose width={520}>
      <div className="support-modal">
        <p className="support-modal__intro">
          –≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç ‚Äî –æ–ø–µ–Ω—Å–æ—Ä—Å –∏ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –≤ –º–æ—ë —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è. –ï—Å–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–µ–ª–∞–µ—Ç —Ç–≤–æ—é —Ä–∞–±–æ—Ç—É –ø—Ä–æ—â–µ ‚Äî —Ç—ã
          –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å –µ–º—É —Ä–∞—Å—Ç–∏!
        </p>
        <p className="support-modal__intro">
          –õ—é–±–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —É–ª—É—á—à–∞—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–∞—è –∏
          –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–π —Å—É–º–º—ã ‚ù§Ô∏è
        </p>
        <Tabs items={tabItems} activeTabId={activeTab} onTabChange={handleTabChange} />
      </div>
    </Modal>
  );
};

export default SupportProjectModal;
