import { Modal } from 'antd';
import { useEffect, useMemo, useState } from 'react';
import Tabs, { type TabItem } from './ui/Tabs';

interface SupportProjectModalProps {
  open: boolean;
  onClose: () => void;
}

type SupportTab = 'bybit' | 'binance' | 'other';

const BYBIT_UID = '496946534';
const BINANCE_UID = '64125639';
const TELEGRAM_URL = 'https://t.me/dontsov';

const SupportProjectModal = ({ open, onClose }: SupportProjectModalProps) => {
  const [activeTab, setActiveTab] = useState<SupportTab>('bybit');

  useEffect(() => {
    if (open) {
      setActiveTab('bybit');
    }
  }, [open]);

  const tabItems: TabItem[] = useMemo<TabItem[]>(
    () => [
      {
        id: 'bybit',
        label: 'ByBit –ø–µ—Ä–µ–≤–æ–¥',
        content: (
          <div className="support-modal__tab">
            <p>
              –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ª—é–±—É—é —Å—É–º–º—É –Ω–∞ ByBit –ø–æ UID <strong>{BYBIT_UID}</strong>. –£–∫–∞–∂–∏ –µ–≥–æ –∫–∞–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤
              –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏–ª–∏ –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –±–∏—Ä–∂–∏.
            </p>
          </div>
        ),
      },
      {
        id: 'binance',
        label: 'Binance –ø–µ—Ä–µ–≤–æ–¥',
        content: (
          <div className="support-modal__tab">
            <p>
              –ù–∞ Binance –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±—É—é —Å—É–º–º—É –ø–æ UID <strong>{BINANCE_UID}</strong>. –£–∫–∞–∂–∏—Ç–µ –µ–≥–æ –≤ —Ä–∞–∑–¥–µ–ª–µ
              ¬´–ü–µ—Ä–µ–≤–æ–¥ –ø–æ UID¬ª –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—É—é –≤–∞–ª—é—Ç—É.
            </p>
          </div>
        ),
      },
      {
        id: 'other',
        label: '–î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç',
        content: (
          <div className="support-modal__tab">
            <p>
              –ï—Å–ª–∏ —É–¥–æ–±–Ω–µ–µ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ‚Äî{' '}
              <a href={TELEGRAM_URL} target="_blank" rel="noreferrer noopener">
                –Ω–∞–ø–∏—à–∏—Ç–µ –≤ Telegram
              </a>
              , –æ–±—Å—É–¥–∏–º —É–¥–æ–±–Ω—ã–π –¥–ª—è –≤–∞—Å –≤–∞—Ä–∏–∞–Ω—Ç.
            </p>
          </div>
        ),
      },
    ],
    [],
  );

  const handleTabChange = (nextTabId: string) => {
    if (nextTabId === 'bybit' || nextTabId === 'binance' || nextTabId === 'other') {
      setActiveTab(nextTabId);
    }
  };

  return (
    <Modal open={open} onCancel={onClose} footer={null} title="üíñ –ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç" centered destroyOnClose width={520}>
      <div className="support-modal">
        <p className="support-modal__intro">
          –≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç ‚Äî –æ–ø–µ–Ω—Å–æ—Ä—Å –∏ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –≤ –º–æ—ë —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è. –ï—Å–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–µ–ª–∞–µ—Ç —Ç–≤–æ—é —Ä–∞–±–æ—Ç—É –ø—Ä–æ—â–µ ‚Äî —Ç—ã
          –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å –µ–º—É —Ä–∞—Å—Ç–∏!
        </p>
        <p className="support-modal__intro">
          –õ—é–±–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —É–ª—É—á—à–∞—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–∞—è –∏
          –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–π —Å—É–º–º—ã ‚ù§Ô∏è
        </p>
        <Tabs items={tabItems} activeTabId={activeTab} onTabChange={handleTabChange} />
      </div>
    </Modal>
  );
};

export default SupportProjectModal;
